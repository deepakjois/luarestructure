local r = require("restructure")

describe('Boolean', function()
  describe('decode', function()
    it('should encode 0 as false', function()
      local stream = r.DecodeStream.new(string.char(0))
      local boolean = r.Boolean.new(r.uint8)
      assert.are_equal(false, boolean:decode(stream))
    end)

    it('should decode 1 as true', function()
      local stream = r.DecodeStream.new(string.char(1))
      local boolean = r.Boolean.new(r.uint8)
      assert.are_equal(true, boolean:decode(stream))
    end)
  end)

  describe("size", function()
    it('should return given type size', function()
      local boolean = r.Boolean.new(r.uint8)
      assert.are_equal(1, boolean:size())
    end)
  end)

  describe("encode", function()
    it('should encode false as 0', function()
      local stream = r.EncodeStream.new()
      local boolean = r.Boolean.new(r.uint8)
      boolean:encode(stream,false)
      assert.are_equal(string.char(0), stream:getContents())
    end)

    it('should encode true as 1', function()
      local stream = r.EncodeStream.new()
      local boolean = r.Boolean.new(r.uint8)
      boolean:encode(stream,true)
      assert.are_equal(string.char(1), stream:getContents())
    end)
  end)
end)
